// Define the `_objectSpread2` function which is used to merge two or more objects
// by copying the enumerable and own properties from a source object to a target object.

// Import the `ownKeys` function from the `object-keys` module to get the own keys
// (enumerable and non-enumerable properties) of an object.
const ownKeys = require("object-keys");

// Define the `_objectSpread2` function
function _objectSpread2(target) {
  // Check if the `target` argument is an object
  if (typeof target !== "object" || target === null) {
    throw new TypeError("The `target` argument must be an object");
  }

  // Initialize the `sources` array to store the source objects
  const sources = Array.from(arguments).slice(1);

  // Iterate over the `sources` array
  for (const source of sources) {
    // Check if the `source` argument is an object
    if (source !== null && typeof source === "object") {
      // Get the own keys of the `source` object
      const keys = ownKeys(source);

      // Iterate over the keys of the `source` object
      for (const key of keys) {
        // Check if the `target` object has the same key
        if (Object.prototype.hasOwnProperty.call(target, key)) {
          // If the `target` object has the same key, check if the property is enumerable
          if (Object.prototype.propertyIsEnumerable.call(source, key)) {
            // If the property is enumerable, copy it to the `target` object
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          }
        } else {
          // If the `target` object does not have the same key, copy it to the `target` object
          Object.defineProperty(target, key, {
            enumerable: true,
            configurable: true,
            writable: true,
            value: source[key],
          });
        }
      }
    } else {
      // If the `source` argument is not an object, throw an error
      throw new TypeError("All arguments after the `target` argument must be objects");
    }
  }

  // Return the `target` object
  return target;
}

// Export the `_objectSpread2` function as the default export of the module
module.exports = _objectSpread2;

// Add the `__esModule` property to the module exports object
module.exports.__esModule = true;

// Define the `default` property of the module exports object
module.exports["default"] = module.exports;


npm install object-keys


function ownKeys(obj) {
  return Object.keys(obj).concat(Object.getOwnPropertySymbols(obj));
}
