export default function isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  // The following line is a more reliable way to check if Reflect.construct behaves as expected
  const constructor = {};
  const proto = {};
  proto.constructor = constructor;
  const result = Reflect.construct(constructor, [], function() {});

  return result === constructor && Object.getPrototypeOf(result) === proto;
}
