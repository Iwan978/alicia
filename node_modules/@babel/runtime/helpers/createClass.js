// Importing toPropertyKey.js
const toPropertyKey = require("./toPropertyKey.js");

// Defining helper functions
function isConfigurable(descriptor) {
  return typeof descriptor.configurable !== "undefined"
    ? descriptor.configurable
    : true;
}

function isEnumerable(descriptor) {
  return typeof descriptor.enumerable !== "undefined"
    ? descriptor.enumerable
    : false;
}

function isWritable(descriptor) {
  return typeof descriptor.writable !== "undefined"
    ? descriptor.writable
    : true;
}

function defineProperty(target, key, descriptor) {
  Object.defineProperty(target, key, {
    configurable: isConfigurable(descriptor),
    enumerable: isEnumerable(descriptor),
    writable: isWritable(descriptor),
    value: descriptor.value,
  });
}

// Creating the main function
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);

  // Making constructor.prototype non-writable to prevent modification
  Object.defineProperty(Constructor, "prototype", {
    writable: false,
  });

  return Constructor;
}

// Exporting the module
module.exports = _createClass;
module.exports.__esModule = true;
module.exports.default = _createClass;
