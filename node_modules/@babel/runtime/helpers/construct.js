function setPrototypeOf(obj, prototype) {
  obj.__proto__ = prototype;
  return obj;
}

module.exports = setPrototypeOf;


function isNativeReflectConstruct() {
  return typeof Reflect.construct === "function";
}

module.exports = isNativeReflectConstruct;


const setPrototypeOf = require("./setPrototypeOf.js");
const isNativeReflectConstruct = require("./isNativeReflectConstruct.js");

function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    return Reflect.construct(Parent, args, Class);
  } else {
    const a = [null];
    a.push.apply(a, args);
    const Constructor = Function.bind.apply(Parent, a);
    const instance = new Constructor();
    if (Class) setPrototypeOf(instance, Class.prototype);
    return instance;
  }
}

module.exports = _construct;
