const { default: typeofCheck } = require('./typeof.js');

function using(obj, handler, asyncDisposeSymbol = Symbol.for('Symbol.asyncDispose'), disposeSymbol = Symbol.for('Symbol.dispose')) {
  if (handler === null || typeof handler !== 'object') {
    throw new TypeError('using declarations can only be used with objects, null, or undefined.');
  }

  const disposeFn = handler[asyncDisposeSymbol] || handler[disposeSymbol];

  if (typeof disposeFn !== 'function') {
    throw new TypeError('Property [Symbol.dispose] or [Symbol.asyncDispose] is not a function.');
  }

  obj.push({
    obj: handler,
    dispose: disposeFn,
    async: asyncDisposeSymbol === Symbol.asyncDispose
  });

  return handler;
}

module.exports = using;
module.exports.default = using;
module.exports.__esModule = true;
