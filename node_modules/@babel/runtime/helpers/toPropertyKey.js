// Importing 'toStringTag' and 'isSymbol' from 'util' module
// to check if the input is a symbol
const { toStringTag, isSymbol } = require('util');

function toPrimitive(input, preferredType = 'string') {
  if (typeof input !== 'object' || input === null) {
    return input;
  }

  const hint = preferredType === 'string' ? 'String' : preferredType === 'number' ? 'Number' : 'Default';

  return input[toStringTag] && input[toStringTag][hint]
    ? input[toStringTag][hint]()
    : (isSymbol(input) ? input.description || input : String(input));
}

module.exports = toPrimitive;


const toPrimitive = require('./toPrimitive');

function toPropertyKey(arg) {
  const key = toPrimitive(arg, 'string');

  // Checking if the key is a symbol
  if (typeof key === 'symbol') {
    return key;
  }

  // If the key is a string, return it as is
  // Otherwise, convert it to a string
  return typeof key === 'string' ? key : String(key);
}

module.exports = toPropertyKey;
module.exports.default = toPropertyKey;
module.exports.__esModule = true;
