#!/usr/bin/env node

const fs = require('fs');
const mkdirp = require('mkdirp');
const minimist = require('minimist');

const args = minimist(process.argv.slice(2), {
  alias: { m: 'mode', h: 'help' },
  string: [ 'mode' ],
});

if (args.help) {
  fs.createReadStream(`${__dirname}/usage.txt`).pipe(process.stdout);
  process.exit(0);
}

const paths = args._.slice();
const mode =
  args.mode !== undefined
    ? (() => {
        const octalMode = parseInt(args.mode, 8);

        if (isNaN(octalMode)) {
          console.error(`Invalid mode value: ${args.mode}`);
          process.exit(1);
        }

        return octalMode;
      })()
    : undefined;

const processPath = (path, cb) => {
  if (mode === undefined) {
    mkdirp(path, cb);
  } else {
    mkdirp(path, mode, cb);
  }
};

const next = () => {
  if (paths.length === 0) return;

  const path = paths.shift();
  processPath(path, (err) => {
    if (err) {
      console.error(err.message);
      process.exit(1);
    } else {
      next();
    }
  });
};

next();

