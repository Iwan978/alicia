import * as jimp from "jimp";

const plugins = [
  "blit",
  "blur",
  "circle",
  "color",
  "contain",
  "cover",
  "crop",
  "displace",
  "dither",
  "fisheye",
  "flip",
  "gaussian",
  "invert",
  "mask",
  "normalize",
  "print",
  "resize",
  "rotate",
  "scale",
  "shadow",
  "threshold",
] as const;

type BlitRet = ReturnType<typeof jimp.blit>;
type BlurRet = ReturnType<typeof jimp.blur>;
type CircleRet = ReturnType<typeof jimp.circle>;
type ColorRet = ReturnType<typeof jimp.color>;
type ContainRet = ReturnType<typeof jimp.contain>;
type CoverRet = ReturnType<typeof jimp.cover>;
type CropRet = ReturnType<typeof jimp.crop>;
type DisplaceRet = ReturnType<typeof jimp.displace>;
type DitherRet = ReturnType<typeof jimp.dither>;
type FlipRet = ReturnType<typeof jimp.flip>;
type FisheyeRet = ReturnType<typeof jimp.fisheye>;
type GaussianRet = ReturnType<typeof jimp.gaussian>;
type InvertRet = ReturnType<typeof jimp.invert>;
type MaskRet = ReturnType<typeof jimp.mask>;
type NormalizeRet = ReturnType<typeof jimp.normalize>;
type PrintRet = ReturnType<typeof jimp.print>;
type ResizeRet = ReturnType<typeof jimp.resize>;
type RotateRet = ReturnType<typeof jimp.rotate>;
type ScaleRet = ReturnType<typeof jimp.scale>;
type ShadowRet = ReturnType<typeof jimp.shadow>;
type ThresholdRet = ReturnType<typeof jimp.threshold>;

type Plugins =
  | BlitRet
  | BlurRet
  | CircleRet
  | ColorRet
  | ContainRet
  | CoverRet
  | CropRet
  | DisplaceRet
  | DitherRet
  | FlipRet
  | FisheyeRet
  | GaussianRet
  | InvertRet
  | MaskRet
  | NormalizeRet
  | PrintRet
  | ResizeRet
  | RotateRet
  | ScaleRet
  | ShadowRet
  | ThresholdRet;

const pluginFactories = plugins.map((name) => jimp[name]);

export default pluginFactories as typeof jimp[];
