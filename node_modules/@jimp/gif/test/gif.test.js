import { Jimp, temporaryDirectory, testCoverage } from "@jimp/test-utils";
import { configure, register } from "@jimp/custom";
import gifPlugin from "../src/index";

// Register the gif plugin
register(gifPlugin);

const jimp = configure({ types: ["gif"] }, Jimp);

describe("GIF", () => {
  const testDir = temporaryDirectory();
  const imagesDir = `${testDir}/images`;

  beforeAll(async () => {
    // Copy the test images to the temporary directory
    await testCoverage("gif", imagesDir);
  }, 60000);

  afterAll(() => {
    // Clean up the temporary directory
    testCoverage.cleanup();
  });

  it("loads a GIF image", async () => {
    const image = await jimp.read(`${imagesDir}/flower.gif`);
    expect(image.getPixelColor(10, 10)).toEqual(0xe5e6d9ff);
  });

  it("loads an animated GIF image", async () => {
    const image = await jimp.read(`${imagesDir}/animated.gif`);
    expect(image.getPixelColor(10, 10)).toEqual(0xa1d2f1ff);
  });

  it("exports a GIF image", async () => {
    const image = await jimp.read(`${imagesDir}/flower.gif`);
    const buffer = await image.getBufferAsync("image/gif");
    expect(buffer.toString().startsWith("GIF")).toBe(true);
  });
});
