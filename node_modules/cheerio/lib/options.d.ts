/// <reference types="node" />
import { DomHandlerOptions } from 'domhandler';
import { ParserOptions } from 'htmlparser2';
import { Options as SelectOptions } from 'cheerio-select';
import cheerio from 'cheerio';
import url from 'url';

type CheerioSelectOptions = SelectOptions;

type HTMLParser2Options = DomHandlerOptions & ParserOptions;

type Parse5Options = {
  scriptingEnabled?: boolean;
  sourceCodeLocationInfo?: boolean;
};

type CheerioOptions = HTMLParser2Options & Parse5Options & {
  xml?: HTMLParser2Options | boolean;
  baseURI?: string | URL;
  quirksMode?: CheerioSelectOptions['quirksMode'];
  pseudos?: CheerioSelectOptions['pseudos'];
};

type InternalOptions = Omit<CheerioOptions, 'xml'> & {
  _useHtmlParser2?: boolean;
};

const defaultOpts: CheerioOptions = {
  xml: false,
  scriptingEnabled: true,
  sourceCodeLocationInfo: false,
  lowerCaseAttributeNames: false,
  lowerCaseTags: false,
  recognizeSelfClosing: false,
  decodeEntities: true,
  withDomLvl1Html: true,
  withDomLvl1Events: true,
  withDomLvl2Core: true,
  withDomLvl2Xml: true,
  withDomLvl3Core: true,
  withDomLvl3Lax: true,
  withDomLvl3Xpath: true,
  withDomLvl4: true,
  locateRelativeToCurrent: false,
  useEverything: false,
  charsFollowingEntities: true,
  nonTextElements: {
    option: true,
    col: true,
    colgroup: true,
    thead: true,
    tfoot: true,
    legend: true,
    area: true,
    br: true,
    fragment: true,
    img: true,
    input: true,
    param: true,
    hr: true,
    link: true,
    meta: true,
    base: true,
    basefont: true,
    script: true,
  },
};

type FlattenOptions = InternalOptions;

/**
 * Flatten the options for Cheerio.
 *
 * This will set `_useHtmlParser2` to true if `xml` is set to true.
 *
 * @param options - The options to flatten.
 * @returns The flattened options.
 */
export function flatten(options: CheerioOptions | null = {}): FlattenOptions {
  const flattened: FlattenOptions = {
    ...options,
    _useHtmlParser2: options.xml === true,
  };

  return flattened;
}

export default cheerio.load;

type Cheerio = cheerio.Cheerio;

type CheerioAPI = cheerio.CheerioAPI;
