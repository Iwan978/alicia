import { AxiosRequestConfig } from 'axios';
import { proto } from '../../WAProto';
import { Chat, Contact } from '../Types';

export const downloadHistory = async (msg: proto.Message.IHistorySyncNotification, options: AxiosRequestConfig<any>): Promise<proto.HistorySync> => {
  // Implementation here
};

export const processHistoryMessage = (item: proto.IHistorySync): {
  chats: Chat[];
  contacts: Contact[];
  messages: proto.IWebMessageInfo[];
} => {
  // Implementation here

  const { chats, contacts, messages } = process(item);

  return { chats, contacts, messages };
};

export const downloadAndProcessHistorySyncNotification = async (msg: proto.Message.IHistorySyncNotification, options: AxiosRequestConfig<any>): Promise<{
  chats: Chat[];
  contacts: Contact[];
  messages: proto.IWebMessageInfo[];
}> => {
  const historySync = await downloadHistory(msg, options);
  const { chats, contacts, messages } = processHistoryMessage(historySync);

  return { chats, contacts, messages };
};

export const getHistoryMsg = (message: proto.IMessage): proto.Message.IHistorySyncNotification | null => {
  // Implementation here

  return historySyncNotification || null;
};

const process = (item: proto.IHistorySync): any => {
  // Implementation here
};
