/**
 * Returns the common elements between two arrays.
 * If the `first` option is true, returns the first common element.
 * If the arrays or the options object are not provided, returns an empty array.
 * @param {Array<*>} array1 - The first array.
 * @param {Array<*>} array2 - The second array.
 * @param {Object} options - The options object.
 * @param {boolean} options.first - Whether to return the first common element.
 * @returns {Array<*>|*|null} The common elements or the first common element.
 */
module.exports = function (array1, array2, options = {}) {
  const { first } = options;

  if (!Array.isArray(array1) || !Array.isArray(array2)) {
    return first ? null : [];
  }

  const set1 = new Set(array1);
  const common = [];
  const found = new Set();
  for (const value of array2) {
    if (set1.has(value) && !found.has(value)) {
      if (first) {
        return value;
      }

      common.push(value);
      found.add(value);
    }
  }

  return first ? null : common;
};
