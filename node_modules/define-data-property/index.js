'use strict';

const hasPropertyDescriptors = require('has-property-descriptors')();
const getIntrinsic = require('get-intrinsic');
const $defineProperty = hasPropertyDescriptors && getIntrinsic('%Object.defineProperty%', true);
const $SyntaxError = getIntrinsic('%SyntaxError%');
const $TypeError = getIntrinsic('%TypeError%');
const gopd = require('gopd');

/**
 * @typedef {import('gopd').TypedPropertyDescriptor<unknown>} TypedPropertyDescriptor
 * @param {object} obj - The object to define the property on
 * @param {PropertyKey} property - The name or symbol of the property
 * @param {unknown} value - The value of the property
 * @param {boolean|null} [nonEnumerable=null] - Whether the property should be non-enumerable
 * @param {boolean|null} [nonWritable=null] - Whether the property should be non-writable
 * @param {boolean|null} [nonConfigurable=null] - Whether the property should be non-configurable
 * @param {boolean} [loose=false] - Whether to fall back to loose mode if defineProperty is not supported
 */
module.exports = function defineDataProperty(
	obj,
	property,
	value,
	{
		nonEnumerable = null,
		nonWritable = null,
	
