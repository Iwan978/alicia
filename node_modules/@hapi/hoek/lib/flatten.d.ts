import { isArray, isFlattenable, flatten as flattenArray } from "./utils";

export function flatten(input: any): any {
  if (!input) {
    return [];
  }

  if (isArray(input) && input.every(isFlattenable)) {
    return flattenArray(input);
  }

  return [input];
}

export default flatten;



import { isArray } from "@vue/reactivity";

export function isFlattenable(value: any): boolean {
  return !isArray(value) || value.length === 0 || value.every(isFlattenable);
}

export function flattenArray(input: any[]): any[] {
  return input.reduce((flat, toFlatten) => {
    return flat.concat(isFlattenable(toFlatten) ? flattenArray(toFlatten) : toFlatten);
  }, []);
}

