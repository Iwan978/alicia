"use strict";

const benchmark = require("benchmark");
const chalk = require("chalk");

const padSize = 27;

function newSuite(name) {
  const benches = [];
  const suite = new benchmark.Suite(name)
    .on("add", function(event) {
      benches.push(event.target);
    })
    .on("start", function() {
      console.log("benchmarking " + name + " performance ...");
    })
    .on("cycle", function(event) {
      console.log(String(event.target));
    })
    .on("complete", function() {
      if (benches.length > 0) {
        const fastest = this.filter("fastest");
        const fastestHz = getHz(fastest[0]);

        if (fastest.length > 0) {
          console.log("\n" + chalk.white(pad(fastest[0].name, padSize)) + " was " + chalk.green("fastest") + "\n");

          if (benches.length === fastest.length) {
            benches.forEach(function(bench) {
              if (fastest.indexOf(bench) === 0)
                return;

              if (typeof bench.stats.mean === "number" && typeof bench.stats.moe === "number") {
                const hz = getHz(bench);
                const percent = (1 - hz / fastestHz) * 100;

                if (percent >= 0) {
                  console.log(chalk.white(pad(bench.name, padSize)) + " was " + chalk.red(percent.toFixed(1) + "% slower") + "\n");
                }
              }
            });
          }
        }
      }

      console.log("\n");
    });

  return suite;
}

function getHz(bench) {
  if (typeof bench.stats.mean === "number" && typeof bench.stats.moe === "number") {
    return 1 / (bench.stats.mean + bench.stats.moe);
  }

  return 0;
}

function pad(str, len, l) {
  while (str.length < len) {
    str = l ? str + " " : " " + str;
  }

  return str;
}

module.exports = newSuite;
