interface WriteFloatFunc {
  (val: number, buf: Uint8Array, pos: number): void;
}

interface ReadFloatFunc {
  (buf: Uint8Array, pos: number): number;
}

interface WriteDoubleFunc {
  (val: number, buf: Uint8Array, pos: number): void;
}

interface ReadDoubleFunc {
  (buf: Uint8Array, pos: number): number;
}

const writeFloatLE: WriteFloatFunc = (val, buf, pos) => {
  // implementation here
};

const writeFloatBE: WriteFloatFunc = (val, buf, pos) => {
  // implementation here
};

const readFloatLE: ReadFloatFunc = (buf, pos) => {
  // implementation here
};

const readFloatBE: ReadFloatFunc = (buf, pos) => {
  // implementation here
};

const writeDoubleLE: WriteDoubleFunc = (val, buf, pos) => {
  // implementation here
};

const writeDoubleBE: WriteDoubleFunc = (val, buf, pos) => {
  // implementation here
};

const readDoubleLE: ReadDoubleFunc = (buf, pos) => {
  // implementation here
};

const readDoubleBE: ReadDoubleFunc = (buf, pos) => {
  // implementation here
};
